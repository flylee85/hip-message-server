package com.djhu.hiup.message.server.service.webservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.7
 * 2018-05-25T08:41:25.851+08:00
 * Generated source version: 3.1.7
 * 
 */
@WebServiceClient(name = "HIPMessageServerWebService", 
                  wsdlLocation = "file:HIPMessageServerWebService.xml",
                  targetNamespace = "urn:hl7-org:v3") 
public class HIPMessageServerWebService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("urn:hl7-org:v3", "HIPMessageServerWebService");
    public final static QName HIPMessageServerWebServiceSoap12 = new QName("urn:hl7-org:v3", "HIPMessageServerWebServiceSoap12");
    public final static QName HIPMessageServerWebServiceSoap = new QName("urn:hl7-org:v3", "HIPMessageServerWebServiceSoap");
    static {
        URL url = null;
        try {
            url = new URL("file:HIPMessageServerWebService.xml");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(HIPMessageServerWebService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:HIPMessageServerWebService.xml");
        }
        WSDL_LOCATION = url;
    }

    public HIPMessageServerWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public HIPMessageServerWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HIPMessageServerWebService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public HIPMessageServerWebService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public HIPMessageServerWebService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public HIPMessageServerWebService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns HIPMessageServerWebServiceSoap
     */
    @WebEndpoint(name = "HIPMessageServerWebServiceSoap12")
    public HIPMessageServerWebServiceSoap getHIPMessageServerWebServiceSoap12() {
        return super.getPort(HIPMessageServerWebServiceSoap12, HIPMessageServerWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HIPMessageServerWebServiceSoap
     */
    @WebEndpoint(name = "HIPMessageServerWebServiceSoap12")
    public HIPMessageServerWebServiceSoap getHIPMessageServerWebServiceSoap12(WebServiceFeature... features) {
        return super.getPort(HIPMessageServerWebServiceSoap12, HIPMessageServerWebServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns HIPMessageServerWebServiceSoap
     */
    @WebEndpoint(name = "HIPMessageServerWebServiceSoap")
    public HIPMessageServerWebServiceSoap getHIPMessageServerWebServiceSoap() {
        return super.getPort(HIPMessageServerWebServiceSoap, HIPMessageServerWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HIPMessageServerWebServiceSoap
     */
    @WebEndpoint(name = "HIPMessageServerWebServiceSoap")
    public HIPMessageServerWebServiceSoap getHIPMessageServerWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(HIPMessageServerWebServiceSoap, HIPMessageServerWebServiceSoap.class, features);
    }

}
